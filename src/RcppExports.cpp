// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// rttrunc
arma::mat rttrunc(int n, double nu, const arma::vec mu, const arma::mat Sigma, const arma::vec a, const arma::vec b, int burn, int lag);
RcppExport SEXP _relliptical_rttrunc(SEXP nSEXP, SEXP nuSEXP, SEXP muSEXP, SEXP SigmaSEXP, SEXP aSEXP, SEXP bSEXP, SEXP burnSEXP, SEXP lagSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type mu(muSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type Sigma(SigmaSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type a(aSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type b(bSEXP);
    Rcpp::traits::input_parameter< int >::type burn(burnSEXP);
    Rcpp::traits::input_parameter< int >::type lag(lagSEXP);
    rcpp_result_gen = Rcpp::wrap(rttrunc(n, nu, mu, Sigma, a, b, burn, lag));
    return rcpp_result_gen;
END_RCPP
}
// rtnormal
arma::mat rtnormal(int n, const arma::vec mu, const arma::mat Sigma, const arma::vec a, const arma::vec b, int burn, int lag);
RcppExport SEXP _relliptical_rtnormal(SEXP nSEXP, SEXP muSEXP, SEXP SigmaSEXP, SEXP aSEXP, SEXP bSEXP, SEXP burnSEXP, SEXP lagSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type mu(muSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type Sigma(SigmaSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type a(aSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type b(bSEXP);
    Rcpp::traits::input_parameter< int >::type burn(burnSEXP);
    Rcpp::traits::input_parameter< int >::type lag(lagSEXP);
    rcpp_result_gen = Rcpp::wrap(rtnormal(n, mu, Sigma, a, b, burn, lag));
    return rcpp_result_gen;
END_RCPP
}
// rtPE
arma::mat rtPE(int n, const double beta, const arma::vec mu, const arma::mat Sigma, const arma::vec a, const arma::vec b, int burn, int lag);
RcppExport SEXP _relliptical_rtPE(SEXP nSEXP, SEXP betaSEXP, SEXP muSEXP, SEXP SigmaSEXP, SEXP aSEXP, SEXP bSEXP, SEXP burnSEXP, SEXP lagSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< const double >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type mu(muSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type Sigma(SigmaSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type a(aSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type b(bSEXP);
    Rcpp::traits::input_parameter< int >::type burn(burnSEXP);
    Rcpp::traits::input_parameter< int >::type lag(lagSEXP);
    rcpp_result_gen = Rcpp::wrap(rtPE(n, beta, mu, Sigma, a, b, burn, lag));
    return rcpp_result_gen;
END_RCPP
}
// rtPVII
arma::mat rtPVII(int n, const double N, const double nu, const arma::vec mu, const arma::mat Sigma, const arma::vec a, const arma::vec b, int burn, int lag);
RcppExport SEXP _relliptical_rtPVII(SEXP nSEXP, SEXP NSEXP, SEXP nuSEXP, SEXP muSEXP, SEXP SigmaSEXP, SEXP aSEXP, SEXP bSEXP, SEXP burnSEXP, SEXP lagSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< const double >::type N(NSEXP);
    Rcpp::traits::input_parameter< const double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type mu(muSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type Sigma(SigmaSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type a(aSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type b(bSEXP);
    Rcpp::traits::input_parameter< int >::type burn(burnSEXP);
    Rcpp::traits::input_parameter< int >::type lag(lagSEXP);
    rcpp_result_gen = Rcpp::wrap(rtPVII(n, N, nu, mu, Sigma, a, b, burn, lag));
    return rcpp_result_gen;
END_RCPP
}
// rtslash
arma::mat rtslash(int n, const double nu, const arma::vec mu, const arma::mat Sigma, const arma::vec a, const arma::vec b, int burn, int lag);
RcppExport SEXP _relliptical_rtslash(SEXP nSEXP, SEXP nuSEXP, SEXP muSEXP, SEXP SigmaSEXP, SEXP aSEXP, SEXP bSEXP, SEXP burnSEXP, SEXP lagSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< const double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type mu(muSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type Sigma(SigmaSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type a(aSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type b(bSEXP);
    Rcpp::traits::input_parameter< int >::type burn(burnSEXP);
    Rcpp::traits::input_parameter< int >::type lag(lagSEXP);
    rcpp_result_gen = Rcpp::wrap(rtslash(n, nu, mu, Sigma, a, b, burn, lag));
    return rcpp_result_gen;
END_RCPP
}
// rtCN
arma::mat rtCN(int n, const double nu, const double rho, const arma::vec mu, const arma::mat Sigma, const arma::vec a, const arma::vec b, int burn, int lag);
RcppExport SEXP _relliptical_rtCN(SEXP nSEXP, SEXP nuSEXP, SEXP rhoSEXP, SEXP muSEXP, SEXP SigmaSEXP, SEXP aSEXP, SEXP bSEXP, SEXP burnSEXP, SEXP lagSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< const double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< const double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type mu(muSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type Sigma(SigmaSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type a(aSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type b(bSEXP);
    Rcpp::traits::input_parameter< int >::type burn(burnSEXP);
    Rcpp::traits::input_parameter< int >::type lag(lagSEXP);
    rcpp_result_gen = Rcpp::wrap(rtCN(n, nu, rho, mu, Sigma, a, b, burn, lag));
    return rcpp_result_gen;
END_RCPP
}
// randomG
arma::mat randomG(int n, arma::vec mu, arma::mat Sigma, arma::vec a, arma::vec b, Function gFUN, Function ginvFUN, int burn, int lag);
RcppExport SEXP _relliptical_randomG(SEXP nSEXP, SEXP muSEXP, SEXP SigmaSEXP, SEXP aSEXP, SEXP bSEXP, SEXP gFUNSEXP, SEXP ginvFUNSEXP, SEXP burnSEXP, SEXP lagSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Sigma(SigmaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type a(aSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type b(bSEXP);
    Rcpp::traits::input_parameter< Function >::type gFUN(gFUNSEXP);
    Rcpp::traits::input_parameter< Function >::type ginvFUN(ginvFUNSEXP);
    Rcpp::traits::input_parameter< int >::type burn(burnSEXP);
    Rcpp::traits::input_parameter< int >::type lag(lagSEXP);
    rcpp_result_gen = Rcpp::wrap(randomG(n, mu, Sigma, a, b, gFUN, ginvFUN, burn, lag));
    return rcpp_result_gen;
END_RCPP
}
// Tmoment
Rcpp::List Tmoment(const arma::vec mu, const arma::mat Sigma, const double nu, const arma::vec lower, const arma::vec upper, int n, int burn, int thinning);
RcppExport SEXP _relliptical_Tmoment(SEXP muSEXP, SEXP SigmaSEXP, SEXP nuSEXP, SEXP lowerSEXP, SEXP upperSEXP, SEXP nSEXP, SEXP burnSEXP, SEXP thinningSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec >::type mu(muSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type Sigma(SigmaSEXP);
    Rcpp::traits::input_parameter< const double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type upper(upperSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type burn(burnSEXP);
    Rcpp::traits::input_parameter< int >::type thinning(thinningSEXP);
    rcpp_result_gen = Rcpp::wrap(Tmoment(mu, Sigma, nu, lower, upper, n, burn, thinning));
    return rcpp_result_gen;
END_RCPP
}
// Nmoment
Rcpp::List Nmoment(const arma::vec mu, const arma::mat Sigma, const arma::vec lower, const arma::vec upper, int n, int burn, int thinning);
RcppExport SEXP _relliptical_Nmoment(SEXP muSEXP, SEXP SigmaSEXP, SEXP lowerSEXP, SEXP upperSEXP, SEXP nSEXP, SEXP burnSEXP, SEXP thinningSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec >::type mu(muSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type Sigma(SigmaSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type upper(upperSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type burn(burnSEXP);
    Rcpp::traits::input_parameter< int >::type thinning(thinningSEXP);
    rcpp_result_gen = Rcpp::wrap(Nmoment(mu, Sigma, lower, upper, n, burn, thinning));
    return rcpp_result_gen;
END_RCPP
}
// PEmoment
Rcpp::List PEmoment(const arma::vec mu, const arma::mat Sigma, const double beta, const arma::vec lower, const arma::vec upper, int n, int burn, int thinning);
RcppExport SEXP _relliptical_PEmoment(SEXP muSEXP, SEXP SigmaSEXP, SEXP betaSEXP, SEXP lowerSEXP, SEXP upperSEXP, SEXP nSEXP, SEXP burnSEXP, SEXP thinningSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec >::type mu(muSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type Sigma(SigmaSEXP);
    Rcpp::traits::input_parameter< const double >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type upper(upperSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type burn(burnSEXP);
    Rcpp::traits::input_parameter< int >::type thinning(thinningSEXP);
    rcpp_result_gen = Rcpp::wrap(PEmoment(mu, Sigma, beta, lower, upper, n, burn, thinning));
    return rcpp_result_gen;
END_RCPP
}
// PVIImoment
Rcpp::List PVIImoment(const arma::vec mu, const arma::mat Sigma, const double N, const double nu, const arma::vec lower, const arma::vec upper, int n, int burn, int thinning);
RcppExport SEXP _relliptical_PVIImoment(SEXP muSEXP, SEXP SigmaSEXP, SEXP NSEXP, SEXP nuSEXP, SEXP lowerSEXP, SEXP upperSEXP, SEXP nSEXP, SEXP burnSEXP, SEXP thinningSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec >::type mu(muSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type Sigma(SigmaSEXP);
    Rcpp::traits::input_parameter< const double >::type N(NSEXP);
    Rcpp::traits::input_parameter< const double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type upper(upperSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type burn(burnSEXP);
    Rcpp::traits::input_parameter< int >::type thinning(thinningSEXP);
    rcpp_result_gen = Rcpp::wrap(PVIImoment(mu, Sigma, N, nu, lower, upper, n, burn, thinning));
    return rcpp_result_gen;
END_RCPP
}
// Slashmoment
Rcpp::List Slashmoment(const arma::vec mu, const arma::mat Sigma, const double nu, const arma::vec lower, const arma::vec upper, int n, int burn, int thinning);
RcppExport SEXP _relliptical_Slashmoment(SEXP muSEXP, SEXP SigmaSEXP, SEXP nuSEXP, SEXP lowerSEXP, SEXP upperSEXP, SEXP nSEXP, SEXP burnSEXP, SEXP thinningSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec >::type mu(muSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type Sigma(SigmaSEXP);
    Rcpp::traits::input_parameter< const double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type upper(upperSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type burn(burnSEXP);
    Rcpp::traits::input_parameter< int >::type thinning(thinningSEXP);
    rcpp_result_gen = Rcpp::wrap(Slashmoment(mu, Sigma, nu, lower, upper, n, burn, thinning));
    return rcpp_result_gen;
END_RCPP
}
// CNmoment
Rcpp::List CNmoment(const arma::vec mu, const arma::mat Sigma, const double nu, const double rho, const arma::vec lower, const arma::vec upper, int n, int burn, int thinning);
RcppExport SEXP _relliptical_CNmoment(SEXP muSEXP, SEXP SigmaSEXP, SEXP nuSEXP, SEXP rhoSEXP, SEXP lowerSEXP, SEXP upperSEXP, SEXP nSEXP, SEXP burnSEXP, SEXP thinningSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec >::type mu(muSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type Sigma(SigmaSEXP);
    Rcpp::traits::input_parameter< const double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< const double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type upper(upperSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type burn(burnSEXP);
    Rcpp::traits::input_parameter< int >::type thinning(thinningSEXP);
    rcpp_result_gen = Rcpp::wrap(CNmoment(mu, Sigma, nu, rho, lower, upper, n, burn, thinning));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_relliptical_rttrunc", (DL_FUNC) &_relliptical_rttrunc, 8},
    {"_relliptical_rtnormal", (DL_FUNC) &_relliptical_rtnormal, 7},
    {"_relliptical_rtPE", (DL_FUNC) &_relliptical_rtPE, 8},
    {"_relliptical_rtPVII", (DL_FUNC) &_relliptical_rtPVII, 9},
    {"_relliptical_rtslash", (DL_FUNC) &_relliptical_rtslash, 8},
    {"_relliptical_rtCN", (DL_FUNC) &_relliptical_rtCN, 9},
    {"_relliptical_randomG", (DL_FUNC) &_relliptical_randomG, 9},
    {"_relliptical_Tmoment", (DL_FUNC) &_relliptical_Tmoment, 8},
    {"_relliptical_Nmoment", (DL_FUNC) &_relliptical_Nmoment, 7},
    {"_relliptical_PEmoment", (DL_FUNC) &_relliptical_PEmoment, 8},
    {"_relliptical_PVIImoment", (DL_FUNC) &_relliptical_PVIImoment, 9},
    {"_relliptical_Slashmoment", (DL_FUNC) &_relliptical_Slashmoment, 8},
    {"_relliptical_CNmoment", (DL_FUNC) &_relliptical_CNmoment, 9},
    {NULL, NULL, 0}
};

RcppExport void R_init_relliptical(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
